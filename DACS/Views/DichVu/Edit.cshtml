@model DACS.Models.DichVu

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section upload
{
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);

                $.ajax(
                    {
                        type: 'POST',
                        url: '/DichVu/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {

                            $('#pictureUpload').attr('src', urlImage);
                            $('#Hinh').val(urlImage);
                        },
                        error: function (err) {
                            alert('Error ', err.statusText);
                        }
                    });
            }
        });</script>
}

<style>
    .form-group{
        display: flex;
        align-items: center;
    }
    .form-horizontal{
        gap: 12px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaDV)

        <div class="form-group">
            <label for="@Model.TenDV" class="control-label col-md-2">Tên dịch vụ</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenDV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenDV, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10 d-flex flex-column gap-2">
                <label>Hình</label>
                @Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
                <div class="input-group form-group">
                    <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                           style="display:none;" />                    <span class="input-group-btn">
                        <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
                    </span>
                </div>
                <img src="@Model.Hinh" id="pictureUpload" class="img-fluid" style="width: 300px" />

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoiGio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoiGio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoiGio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaDV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaDV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaDV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="display: flex; gap: 12px; margin-bottom: 16px">
                <input type="submit" value="Save" class="btn btn-success" />
                 <a href="/DichVu/ListDichVu" class="btn btn-primary">Quay lại</a>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}