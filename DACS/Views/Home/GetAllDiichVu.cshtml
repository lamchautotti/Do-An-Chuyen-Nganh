@model PagedList.IPagedList<DACS.Models.DichVu>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DiffLayOut.cshtml";
}
<script type="text/javascript">
    function addToCart(id) {
        $.ajax({
            type: 'POST', // phương thức truyền dữ liệu POST
            url: "@Url.Action("ThemGioHang", "GioHang")", // gửi dữ liệu tới Action ThemGioHang trong Controller GioHang
            data: { id: id },
            success: function (result) {
                if (result.success == true) {
                    getGioHangPartial(); // hàm cập nhật lại số lượng giỏ hàng ở menu
                    alert(result.message);  // thông báo thành công
                }
            }
        });
    }
</script>

<style>
    .list,
    .list * {
        box-sizing: border-box;
    }

    .list {
        position: relative;
        margin-top: 90px;
        padding: 0 32px;
    }
    .nak-link {
        color: var(--neutral-black, #3d3d3d);
        text-align: left;
        font-family: var(--h-5-font-family, "Roboto-Regular", sans-serif);
        font-size: var(--h-5-font-size, 24px);
        font-weight: var(--h-5-font-weight, 400);
    }

    .list-product {
        display: grid;
        grid-template-columns: auto auto auto auto;
        margin-top: 8px;
    }

    .product {
        background: var(--neutral-gray-200, #e0e0e0);
        border-radius: 20px;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        padding: 8px 16px;
        margin: 12px;
    }

    .tittle {
        display: flex;
        flex-direction: column;
        gap: 24px;
        align-items: flex-start;
        justify-content: center;
        align-self: stretch;
        flex-shrink: 0;
        position: relative;
    }

    .t-n-gi-t-i {
        color: var(--neutral-black, #3d3d3d);
        text-align: left;
        font-family: var(--body-1-font-family, "Roboto-Regular", sans-serif);
        font-size: var(--body-1-font-size, 16px);
        font-weight: var(--body-1-font-weight, 400);
        position: relative;
    }

    .gi-40000-0000 {
        color: var(--neutral-black, #3d3d3d);
        text-align: left;
        font-family: var(--body-1-font-family, "Roboto-Regular", sans-serif);
        font-size: var(--body-1-font-size, 16px);
        font-weight: var(--body-1-font-weight, 400);
        position: relative;
    }

    .gi-h-nh-ch-nh {
        color: var(--neutral-black, #3d3d3d);
        text-align: left;
        font-family: var(--body-1-font-family, "Roboto-Regular", sans-serif);
        font-size: var(--body-1-font-size, 16px);
        font-weight: var(--body-1-font-weight, 400);
        position: relative;
    }

    .button {
        background: var(--semantic-sussces, #62d2a2);
        border-radius: 12px;
        padding: 10px;
        display: flex;
        flex-direction: row;
        gap: 10px;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        position: relative;
    }

    .thu-ngay {
        color: var(--neutral-black, #3d3d3d);
        text-align: left;
        font-family: var(--body-1-font-family, "Roboto-Regular", sans-serif);
        font-size: var(--body-1-font-size, 16px);
        font-weight: var(--body-1-font-weight, 400);
        position: relative;
    }

    .picture {
        border-radius: 24px;
        width: 140px;
        height: 140px;
        object-fit: cover;
    }

    .pagination-container{
        display:flex;
        justify-content: center;
        align-items: center;
    }
        .pagination-container .pagination {
            display: flex;
        }

    ul, li{
        list-style-type: none;
        margin: 0 8px;
    }

        ul.pagination .page-item.active {
            background: blue;
            color: white;
        }

    .pagination .page-item a{
        padding: 16px;
    }
</style>

<div class="list">
    <div class="nak-link">Danh sách dịch vụ</div>
    <div class="list-product">

    @foreach (var item in Model)
    {
    <div class="product">
        <div class="tittle">
            <div class="t-n-gi-t-i">Tên: @((item.TenDV.Length > 15) ? (item.TenDV.Substring(0, 10) + "...") : item.TenDV )</div>
            <div class="gi-40000-0000">Giá: @item.GiaDV.ToString().Split('.')[0]</div>
            <div class="gi-h-nh-ch-nh">Giờ: @item.GoiGio</div>
            <div class="button">
                <div onclick="addToCart(@item.MaDV)" class="thu-ngay">Thuê ngay</div>
            </div>
        </div>
        <img class="picture" src="@Url.Content(item.Hinh)" />
    </div>
    }
    </div>
</div>


<div style="display: flex; justify-content: center; align-items: center; margin-top: 16px;">
    <div>
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) /
        @Model.PageCount
    </div>
        @Html.PagedListPager(Model, page => Url.Action("GetAllDiichVu", new
        {
            page = page
        }), new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" }
        })
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var maxLength = 100;
        $(".show-read-more").each(function () {
            var myStr = $(this).text();
            if ($.trim(myStr).length > maxLength) {
                var newStr = myStr.substring(0, maxLength);
                var removedStr = myStr.substring(maxLength, $.trim(myStr).length);
                $(this).empty().html(newStr);
                $(this).append(' <a href="javascript:void(0);" class="read-more">đọc tiếp...</a>');
                $(this).append('<span class="more-text">' + removedStr +
                    '</span>');
            }
        });
        $(".read-more").click(function () {
            $(this).siblings(".more-text").contents().unwrap();
            $(this).remove();
        });
    });</script>
